## https://docker-handbook.farhan.dev/image-manipulation-basics/#building-nginx-from-source

> docker build --tag custom-nginx:built-v2 .
> docker images  | findstr custom-nginx

REPOSITORY      TAG         IMAGE ID       CREATED          SIZE
custom-nginx    built-v2    80190d2ade8a   58 seconds ago   383MB

> docker build -t nginx-custom-reduced -f dockerfile-reduced .
> docker images | findstr reduced

REPOSITORY      TAG         IMAGE ID       CREATED         SIZE
custom-reduced  latest      d06d68e9a56a   3 minutes ago   84.5MB


- I would like to push docker image generated by given dockerfile using github actions

- please modify github actions manifest to push the image on hub.docker.com

- what should be the file name for this workflow

- i would like to push this app to my github repo

    The directory structure should look like this:
    ```
    d:\_NEW\Codes\Demos\Containers\
    ├── .github/
    │   └── workflows/
    │       └── docker-publish.yml
    └── Ubuntu-From-Scratch/
        └── dockerfile
    ```

- is it possible to create github repo using cli

    # Install GitHub CLI
    winget install GitHub.cli

    # Login to GitHub
    gh auth login

    # Create a new repository (replace YOUR-USERNAME with your GitHub username)
    gh repo create custom-nginx-container --public --description "Custom Nginx container with GitHub Actions"

    # Navigate to your project directory
    cd d:\_NEW\Codes\Demos\Containers

    # Initialize git repository
    git init

    # Add all files
    git add .

    # Create initial commit
    git commit -m "Initial commit: Custom Nginx container with GitHub Actions"

    # Rename default branch to main
    git branch -M main

    # Add remote (replace YOUR-USERNAME with your actual GitHub username)
    gh repo set-default YOUR-USERNAME/custom-nginx-container

    # Push to GitHub
    git push -u origin main

    # Check repository status
    gh repo view

    # List workflows
    gh workflow list

    # Add Docker Hub username secret
    gh secret set DOCKERHUB_USERNAME

    # Add Docker Hub token secret
    gh secret set DOCKERHUB_TOKEN

    # Watch workflow status
    gh run watch

- how to change 'https://github.com/YOUR-USERNAME/custom-nginx-container.git/' to 'https://github.com/ustabar/custom-nginx-container.git/'

    gh repo create custom-nginx-container --public --description "Custom Nginx container with GitHub Actions"

    # Check current remote
    git remote -v

    # Remove existing remote
    git remote remove origin

    # Add new remote with correct username
    git remote add origin https://github.com/ustabar/custom-nginx-container.git

    # Install GitHub CLI
    winget install GitHub.cli

    # Login to GitHub
    gh auth login

    # Create repository
    gh repo create custom-nginx-container --public

    # Initialize and push
    git init
    git add .
    git commit -m "Initial commit: Custom Nginx container with GitHub Actions"
    git branch -M main
    git remote add origin https://github.com/ustabar/custom-nginx-container.git
    git push -u origin main

    # Pull the image
    docker pull your-dockerhub-username/nginx-custom:latest
    docker pull barut/nginx-custom:latest

    What's next:
    View a summary of image vulnerabilities and recommendations 
    → docker scout quickview barut/nginx-custom:latest

    # Run the container
    docker run -d -p 8011:80 your-dockerhub-username/nginx-custom:latest
    docker run -d -p 8011:80 barut/nginx-custom:latest